name: Build
on: [pull_request,workflow_call]
jobs:
  Formatting:
    uses: ./.github/workflows/formatting.yaml

  Filename:
    uses: ./.github/workflows/filename.yaml
    with:
      original_event_name: "${{ github.event_name }}"

  Windows:
    runs-on: windows-latest
    needs: [Formatting]
    steps:
      - name: Install MSCV
        uses: ilammy/msvc-dev-cmd@v1

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.1
        id: install-boost
        with:
            boost_version: 1.81.0
            platform_version: 2022
            toolset: msvc
            link: static
            boost_install_dir: "${{github.workspace}}/external"

      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE:STRING=Release -DBOOST_ROOT="${{ steps.install-boost.outputs.BOOST_ROOT }}" -B build -G Ninja

      - name: Build
        run: cmake --build build

      - name: Rename
        working-directory: ./build/src
        run: mv sdl2dsu.exe ${{ jobs.Filename.outputs.filename }}.exe

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./build/src/sdl2dsu*exe
          retention-days: 1
          if-no-files-found: error

  Linux:
    runs-on: ubuntu-latest
    needs: [Formatting]
    steps:
      - name: Install packages for building
        run: |
          sudo apt-get update
          sudo apt-get install build-essential git \
              pkg-config cmake ninja-build gnome-desktop-testing libasound2-dev libpulse-dev \
              libaudio-dev libjack-dev libsndio-dev libsamplerate0-dev libx11-dev libxext-dev \
              libxrandr-dev libxcursor-dev libxfixes-dev libxi-dev libxss-dev libwayland-dev \
              libxkbcommon-dev libdrm-dev libgbm-dev libgl1-mesa-dev libgles2-mesa-dev \
              libegl1-mesa-dev libdbus-1-dev libibus-1.0-dev libudev-dev fcitx-libs-dev \
              libpipewire-0.3-dev libdecor-0-dev ninja-build libfuse2

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.1
        id: install-boost
        with:
            boost_version: 1.81.0
            platform_version: 22.04
            toolset: gcc
            link: static
            boost_install_dir: "${{github.workspace}}/external"

      - name: Configure
        run: mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE:STRING=Release -DBOOST_ROOT="${{ steps.install-boost.outputs.BOOST_ROOT }}" -G Ninja

      - name: Build
        working-directory: ./build
        run: ninja

      - name: Install
        working-directory: ./build
        run: DESTDIR=AppDir ninja install

      - name: Get linuxdeploy's AppImage
        working-directory: ./build
        run: wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage && chmod +x ./linuxdeploy-x86_64.AppImage

      - name: Rename
        run: echo "OUTPUT=${{ jobs.Filename.outputs.filename }}.AppImage" >> $GITHUB_ENV

      - name: Package AppImage
        working-directory: ./build
        run: ./linuxdeploy-x86_64.AppImage --appdir ./AppDir --output appimage

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./build/sdl2dsu*AppImage
          retention-days: 1
          if-no-files-found: error
        